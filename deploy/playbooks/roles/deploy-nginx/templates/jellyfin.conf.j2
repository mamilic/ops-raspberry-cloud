server {
  listen 8096;
  server_name 192.168.2.192;

  #return 301 https://$host$request_uri;

  ## The default `client_max_body_size` is 1M, this might not be enough for some posters, etc.
  client_max_body_size 20M;

  server_tokens off;

  rewrite_log  on;

  # use a variable to store the upstream proxy
  # in this example we are using a hostname which is resolved via DNS
  # (if you aren't using DNS remove the resolver line and change the variable to point to an IP address e.g `set $jellyfin 127.0.0.1`)
  set $jellyfin jellyfin;
  resolver 127.0.0.11 valid=10s;

  # gzip Settings
  gzip on;
  gzip_http_version 1.1;
  gzip_vary on;
  gzip_disable "MSIE [1-6]\.(?!.*SV1)";
  gzip_proxied any;
  gzip_comp_level	1;
  gzip_min_length	10240;
  gzip_buffers 16 8k;

  # what gzip will compress
  gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

  # Security / XSS Mitigation Headers
  # NOTE: X-Frame-Options may cause issues with the webOS app
  add_header X-Frame-Options "SAMEORIGIN";
  add_header X-XSS-Protection "1; mode=block";
  add_header X-Content-Type-Options "nosniff";
  # add_header Content-Security-Policy "default-src https: data: blob:; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' https://www.gstatic.com/cv/js/sender/v1/cast_sender.js; worker-src 'self' blob:; connect-src 'self'; object-src 'none'; frame-ancestors 'self'";

  # HTTP security headers -- added for A+ rating
  add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
  add_header Referrer-Policy 'strict-origin';
  add_header Expect-CT 'enforce, max-age=3600';
  add_header Feature-Policy "autoplay 'none'; camera 'none'";
  add_header Permissions-Policy 'autoplay=(); camera=()';
  add_header X-Permitted-Cross-Domain-Policies none;

  # Content Security Policy
  # See: https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP
  # Enforces https content and restricts JS/CSS to origin
  # External Javascript (such as cast_sender.js for Chromecast) must be whitelisted.
  # NOTE: The default CSP headers may cause issues with the webOS app
  # add_header Content-Security-Policy "default-src https: data: blob: http://image.tmdb.org; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' https://www.gstatic.com/cv/js/sender/v1/cast_sender.js https://www.gstatic.com/eureka/clank/95/cast_sender.js https://www.gstatic.com/eureka/clank/96/cast_sender.js https://www.gstatic.com/eureka/clank/97/cast_sender.js https://www.youtube.com blob:; worker-src 'self' blob:; connect-src 'self'; object-src 'none'; frame-ancestors 'self'";

  location / {
      # Proxy main Jellyfin traffic
      proxy_pass http://$jellyfin:8096;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Protocol $scheme;
      proxy_set_header X-Forwarded-Host $http_host;

      # Disable buffering when the nginx proxy gets very resource heavy upon streaming
      proxy_buffering off;
  }

  # location block for /web - This is purely for aesthetics so /web/#!/ works instead of having to go to /web/index.html/#!/
  location = /web/ {
      # Proxy main Jellyfin traffic
      proxy_pass http://$jellyfin:8096/web/index.html;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Protocol $scheme;
      proxy_set_header X-Forwarded-Host $http_host;
  }

  location /socket {
      # Proxy Jellyfin Websockets traffic
      proxy_pass http://$jellyfin:8096;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Protocol $scheme;
      proxy_set_header X-Forwarded-Host $http_host;
  }
}

server {
  listen 8097      ssl http2;
  listen [::]:8097 ssl http2;
  server_name      localhost;

  # The default `client_max_body_size` is 1M, this might not be enough for some posters, etc.
  client_max_body_size 20M;

  server_tokens off;

  rewrite_log  on;

  ssl_certificate {{ CERT_PATH }}/cert.pem;
  ssl_certificate_key {{ CERT_PATH }}/key.pem;
  ssl_dhparam {{ CERT_PATH }}/dhparam.pem;

  location / {
        proxy_pass http://127.0.0.1:8096;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
  }
}